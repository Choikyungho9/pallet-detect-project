import cv2
import numpy as np

cam = cv2.VideoCapture(0)
cam.set(3, 640)  # CV_CAP_PROP_FRAME_WIDTH
cam.set(4, 360)  # CV_CAP_PROP_FRAME_HEIGHT
cam.set(5,20) #CV_CAP_PROP_FPS

def nothing(x):
    pass

cv2.namedWindow("Trackbars")
cv2.createTrackbar("L-H", "Trackbars", 0, 179, nothing)
cv2.createTrackbar("L-S", "Trackbars", 120, 255, nothing)
cv2.createTrackbar("L-V", "Trackbars", 30, 255, nothing)
cv2.createTrackbar("U-H", "Trackbars", 50, 179, nothing)
cv2.createTrackbar("U-S", "Trackbars", 225, 255, nothing)
cv2.createTrackbar("U-V", "Trackbars", 170, 255, nothing)




while True:
    _, frame = cam.read()  # 캠 이미지 불러오기
    hsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)
    l_h = cv2.getTrackbarPos("L-H", "Trackbars")
    l_s = cv2.getTrackbarPos("L-S", "Trackbars")
    l_v = cv2.getTrackbarPos("L-V", "Trackbars")
    u_h = cv2.getTrackbarPos("U-H", "Trackbars")
    u_s = cv2.getTrackbarPos("U-S", "Trackbars")
    u_v = cv2.getTrackbarPos("U-V", "Trackbars")
    #hsv = ~hsv;

    lower_red = np.array([l_h, l_s, l_v])
    upper_red = np.array([u_h, u_s, u_v])

    mask = cv2.inRange(hsv, lower_red, upper_red)
    kernel = np.ones((5,5), np.uint8)
    mask = cv2.erode(mask, kernel)
    _, contours, _ = cv2.findContours(mask, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)

    for cnt in contours:
        area = cv2.contourArea(cnt)
        approx = cv2.approxPolyDP(cnt, 0.065*cv2.arcLength(cnt, True), True)
        x = approx.ravel()[0]
        y = approx.ravel()[1]

        if area > 1500:
            cv2.drawContours(frame, [cnt], 0, (0, 0, 0), 5)

            continue

    cv2.imshow("Cam Viewer", frame)  # 불러온 이미지 출력하기
    cv2.imshow("Mask", mask)
    if cv2.waitKey(1) == 27:
        break  # esc to quit

cam.release()
cv2.destroyAllWindows()

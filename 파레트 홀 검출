#-*- coding:utf-8 -*-
#파레트의 홀 검출 및 테두리 치는 코드
import cv2
import numpy as np
import random
from matplotlib import pyplot as plt

img = cv2.imread('20.png')

imgray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
ret, thresh = cv2.threshold(imgray,125,255,0)

image, contours, hierarchy = cv2.findContours(thresh, cv2.RETR_TREE,cv2.CHAIN_APPROX_SIMPLE)
cnt = contours[0]

print(len(contours))

centres = []

for i in range(len(contours)):
    #각 Contour Line을 구분하기 위해서 Color Random생성
    moments = cv2.moments(contours[i])
    #centres.append((int(moments['m10'] / moments['m00']), int(moments['m01'] / moments['m00'])))
    #cv2.circle(img, centres[-1], 3, (0, 0, 0), -1)
    #cv2.drawContours(img, contours, -1, (0, 255, 0), 4)
    if cv2.contourArea(contours[i]) < 3000 :
        continue
    if cv2.contourArea(contours[i]) >6000:
        continue

    b = random.randrange(1,255)
    g = random.randrange(1,255)
    r = random.randrange(1,255)

    cnt = contours[i]
    img = cv2.drawContours(img, [cnt], -1,(b,g,r), 2)

    rect = cv2.minAreaRect(cnt)
    box = cv2.boxPoints(rect)
    box = np.int0(box)
    img = cv2.drawContours(img, [box], 0, (0, 0, 255), 2)


titles = ['Result']
images = [img]

for i in range(1):
    plt.subplot(1,1,i+1), plt.title(titles[i]), plt.imshow(images[i])
    plt.xticks([]), plt.yticks([])


plt.show()
